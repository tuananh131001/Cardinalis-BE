services:
  database-tweet:
    container_name: database-tweet
    image: postgres
    environment:
      POSTGRES_DB: cardinalis
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - my-db-tweet:/data/postgres
    ports:
      - "3306:5432"
    networks:
      - twitter-network
    restart: always

  database-user:
    container_name: database-user
    image: postgres
    environment:
      POSTGRES_DB: cardinalis
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - my-db-user:/data/postgres
    ports:
      - "3307:5432"
    networks:
      - twitter-network
    restart: always


  redis-timeline:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    networks:
      - twitter-network
    volumes:
      - my-redis-timeline:/data/redis
    restart: always

  zoo1:
    container_name: zoo1
    image: wurstmeister/zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - twitter-network
    ports:
      - "2181:2181"
    volumes:
      - zk-single-kafka-single:/var/lib/zoo/data
      - zk-single-kafka-single:/var/lib/zoo/datalog

  kafka1:
    container_name: kafka1
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
#      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
#      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
    volumes:
      - zk-single-kafka-single:/var/lib/kafka/data
    depends_on:
      - zoo1
    networks:
      - twitter-network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - twitter-network
    restart: unless-stopped


volumes:
  my-db-tweet:
  my-db-user:
  pgadmin:
  my-redis-timeline:
  zk-single-kafka-single:

networks:
  twitter-network:
