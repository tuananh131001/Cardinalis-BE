server:
  port: 8081
spring:
  application:
    name: tweet-service

  datasource:
    username: ${USER_DB:postgres}
    password: ${PASSWORD_DB:postgres}
    url: ${HOST_DB:jdbc:postgresql://localhost:5432/cardinalis}
    driver-class-name: ${DRIVER_DB:org.postgresql.Driver}
  cloud:
    service-registry:
      auto-registration:
        enabled: false
  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GITHUB_CLIENT_ID:581a14a284dd1d5815f5}
            client-secret: ${GITHUB_CLIENT_SECRET:8c77af28a85cd5bc2063e007cb48116296767152}

jwt:
  secret: screte-value
  expiration: 86400000


#  kafka:
#    consumer:
#      bootstrap-servers: localhost:9092
#      group-id: group_id
#      auto-offset-reset: earliest
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#    producer:
#      bootstrap-servers: localhost:9092
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#
#
#tpd:
#  topic-name: tweetservice